{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red67\green67\blue67;\red255\green255\blue255;\red22\green21\blue22;
\red16\green120\blue67;\red0\green0\blue255;\red19\green85\blue52;\red98\green0\blue117;\red152\green0\blue15;
\red25\green0\blue135;\red152\green66\blue3;\red78\green77\blue78;\red0\green0\blue0;\red234\green234\blue234;
\red22\green21\blue22;}
{\*\expandedcolortbl;;\cssrgb\c33333\c33333\c33333;\cssrgb\c100000\c100000\c100000;\cssrgb\c11373\c10980\c11373;
\cssrgb\c0\c53333\c33333;\cssrgb\c0\c0\c100000;\cssrgb\c6667\c40000\c26667;\cssrgb\c46667\c0\c53333;\cssrgb\c66667\c6667\c6667;
\cssrgb\c13333\c6667\c60000;\cssrgb\c66667\c33333\c0;\cssrgb\c38039\c37647\c38039;\cssrgb\c0\c0\c0;\cssrgb\c93333\c93333\c93333;
\cssrgb\c11373\c10980\c11373\c52157;}
\margl1440\margr1440\vieww25340\viewh26060\viewkind0
\deftab720
\pard\pardeftab720\sl340\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <stdlib.h>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include "ft_stock_str.h"\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf5 \cb3 \strokec5 int\cf4 \strokec4 	\cf6 \strokec6 ft_strlen\cf4 \strokec4 (\cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4 str)\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf5 \strokec5 int\cf4 \strokec4 	index;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	index = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 while\cf4 \strokec4  (str[index])\cb1 \
\cb3 		index++;\cb1 \
\cb3 	\cf8 \strokec8 return\cf4 \strokec4  (index);\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf5 \cb3 \strokec5 char\cf4 \strokec4 	\cf5 \strokec5 *\cf6 \strokec6 ft_strdup\cf4 \strokec4 (\cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4 src)\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf5 \strokec5 int\cf4 \strokec4 		index;\cb1 \
\cb3 	\cf5 \strokec5 char\cf4 \strokec4 	\cf5 \strokec5 *\cf4 \strokec4 dest;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	index = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	dest = (\cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4 )malloc(ft_strlen(src) * \cf8 \strokec8 sizeof\cf4 \strokec4 (\cf5 \strokec5 char\cf4 \strokec4 ) + \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 	\cf8 \strokec8 if\cf4 \strokec4  (!dest)\cb1 \
\cb3 		\cf8 \strokec8 return\cf4 \strokec4  (\cf7 \strokec7 0\cf4 \strokec4 );\cb1 \
\cb3 	\cf8 \strokec8 while\cf4 \strokec4  (src[index])\cb1 \
\cb3 	\{\cb1 \
\cb3 		dest[index] = src[index];\cb1 \
\cb3 		index++;\cb1 \
\cb3 	\}\cb1 \
\cb3 	dest[index] = \cf9 \strokec9 '\\0'\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 return\cf4 \strokec4  (dest);\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf8 \cb3 \strokec8 struct\cf4 \strokec4  \cf6 \strokec6 s_stock_str\cf4 \strokec4 	*\cf6 \strokec6 ft_strs_to_tab\cf4 \strokec4 (\cf5 \strokec5 int\cf4 \strokec4  ac, \cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 **\cf4 \strokec4 av)\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf5 \strokec5 int\cf4 \strokec4 					index;\cb1 \
\cb3 	\cf8 \strokec8 struct\cf4 \strokec4  \cf6 \strokec6 s_stock_str\cf4 \strokec4 	*array;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	array = malloc((ac + \cf7 \strokec7 1\cf4 \strokec4 ) * \cf8 \strokec8 sizeof\cf4 \strokec4 (\cf8 \strokec8 struct\cf4 \strokec4  \cf6 \strokec6 s_stock_str\cf4 \strokec4 ));\cb1 \
\cb3 	\cf8 \strokec8 if\cf4 \strokec4  (!array)\cb1 \
\cb3 		\cf8 \strokec8 return\cf4 \strokec4  (\cf10 \strokec10 NULL\cf4 \strokec4 );\cb1 \
\cb3 	index = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 while\cf4 \strokec4  (index < ac)\cb1 \
\cb3 	\{\cb1 \
\cb3 		array[index].size = ft_strlen(av[index]);\cb1 \
\cb3 		array[index].str = av[index];\cb1 \
\cb3 		array[index].copy = ft_strdup(av[index]);\cb1 \
\cb3 		index++;\cb1 \
\cb3 	\}\cb1 \
\cb3 	array[index].str = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	array[index].copy = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 return\cf4 \strokec4  (array);\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf11 \cb3 \strokec11 /*\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11 int	main(int argc, char **argv)\cf4 \cb1 \strokec4 \
\cf11 \cb3 \strokec11 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl340\partightenfactor0
\cf4 \cb3 	\cf11 \strokec11 int					i;\cf4 \cb1 \strokec4 \
\cb3 	\cf11 \strokec11 struct s_stock_str	*structs;\cf4 \cb1 \strokec4 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	\cf11 \strokec11 structs = ft_strs_to_tab(argc, argv);\cf4 \cb1 \strokec4 \
\cb3 	\cf11 \strokec11 i = 0;\cf4 \cb1 \strokec4 \
\cb3 	\cf11 \strokec11 while (i < argc)\cf4 \cb1 \strokec4 \
\cb3 	\cf11 \strokec11 \{\cf4 \cb1 \strokec4 \
\cb3 		\cf11 \strokec11 printf("%d\\n", i);\cf4 \cb1 \strokec4 \
\cb3 		\cf11 \strokec11 printf("\\t| original : $%s$\\t%p\\n", structs[i].str, structs[i].str);\cf4 \cb1 \strokec4 \
\cb3 		\cf11 \strokec11 printf("\\t|   copied : $%s\\t%p\\n", structs[i].copy, structs[i].copy);\cf4 \cb1 \strokec4 \
\cb3 		\cf11 \strokec11 printf("\\t|     size : %d\\n", structs[i].size);\cf4 \cb1 \strokec4 \
\cb3 		\cf11 \strokec11 i++;\cf4 \cb1 \strokec4 \
\cb3 	\cf11 \strokec11 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl340\partightenfactor0
\cf11 \cb3 \strokec11 \}*/\cf4 \cb1 \strokec4 \
************************************\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 \strokec2 #include "ft_stock_str.h"\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include <stdio.h>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include <unistd.h>\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4 	\cf6 \strokec6 ft_putstr\cf4 \strokec4 (\cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4 str)\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf5 \strokec5 int\cf4 \strokec4 	i;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	i = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 while\cf4 \strokec4  (str[i])\cb1 \
\cb3 	\{\cb1 \
\cb3 		write(\cf7 \strokec7 1\cf4 \strokec4 , &str[i], \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 		i++;\cb1 \
\cb3 	\}\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4 	\cf6 \strokec6 ft_putchar\cf4 \strokec4 (\cf5 \strokec5 char\cf4 \strokec4  c)\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	write(\cf7 \strokec7 1\cf4 \strokec4 , &c, \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4 	\cf6 \strokec6 ft_putnbr\cf4 \strokec4 (\cf5 \strokec5 int\cf4 \strokec4  nb)\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf8 \strokec8 if\cf4 \strokec4  (nb == -\cf7 \strokec7 2147483648\cf4 \strokec4  )\cb1 \
\cb3 	\{\cb1 \
\cb3 		write(\cf7 \strokec7 1\cf4 \strokec4 , \cf9 \strokec9 "-2147483648"\cf4 \strokec4 , \cf7 \strokec7 11\cf4 \strokec4 );\cb1 \
\cb3 	\}\cb1 \
\cb3 	\cf8 \strokec8 else\cf4 \strokec4  \cf8 \strokec8 if\cf4 \strokec4  (nb < \cf7 \strokec7 0\cf4 \strokec4 )\cb1 \
\cb3 	\{\cb1 \
\cb3 		ft_putchar(\cf9 \strokec9 '-'\cf4 \strokec4 );\cb1 \
\cb3 		ft_putnbr(-nb);\cb1 \
\cb3 	\}\cb1 \
\cb3 	\cf8 \strokec8 else\cf4 \strokec4  \cf8 \strokec8 if\cf4 \strokec4  (nb >= \cf7 \strokec7 0\cf4 \strokec4  && nb < \cf7 \strokec7 10\cf4 \strokec4  )\cb1 \
\cb3 	\{\cb1 \
\cb3 		ft_putchar(nb + \cf9 \strokec9 '0'\cf4 \strokec4 );\cb1 \
\cb3 	\}\cb1 \
\cb3 	\cf8 \strokec8 else\cf4 \cb1 \strokec4 \
\cb3 	\{\cb1 \
\cb3 		ft_putnbr(nb / \cf7 \strokec7 10\cf4 \strokec4 );\cb1 \
\cb3 		ft_putnbr(nb % \cf7 \strokec7 10\cf4 \strokec4 );\cb1 \
\cb3 	\}\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf8 \cb3 \strokec8 struct\cf4 \strokec4  \cf6 \strokec6 s_stock_str\cf4 \strokec4 	*\cf6 \strokec6 ft_strs_to_tab\cf4 \strokec4 (\cf5 \strokec5 int\cf4 \strokec4  ac, \cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 **\cf4 \strokec4 av);\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4 	\cf6 \strokec6 ft_show_tab\cf4 \strokec4 (\cf8 \strokec8 struct\cf4 \strokec4  \cf6 \strokec6 s_stock_str\cf4 \strokec4  *par)\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf5 \strokec5 int\cf4 \strokec4 	i;\cb1 \
\cb3 \uc0\u8203 \cb1 \
\cb3 	i = \cf7 \strokec7 1\cf4 \strokec4 ;\cb1 \
\cb3 	\cf8 \strokec8 while\cf4 \strokec4  (par[i].str != \cf7 \strokec7 0\cf4 \strokec4 )\cb1 \
\cb3 	\{\cb1 \
\cb3 		ft_putstr(par[i].str);\cb1 \
\cb3 		write(\cf7 \strokec7 1\cf4 \strokec4 , \cf9 \strokec9 "\\n"\cf4 \strokec4 , \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 		ft_putnbr(par[i].size);\cb1 \
\cb3 		write(\cf7 \strokec7 1\cf4 \strokec4 , \cf9 \strokec9 "\\n"\cf4 \strokec4 , \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 		ft_putstr(par[i].copy);\cb1 \
\cb3 		write(\cf7 \strokec7 1\cf4 \strokec4 , \cf9 \strokec9 "\\n"\cf4 \strokec4 , \cf7 \strokec7 1\cf4 \strokec4 );\cb1 \
\cb3 		i++;\cb1 \
\cb3 	\}\cb1 \
\cb3 \}\cb1 \
\cb3 \uc0\u8203 \cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \cb3 \strokec5 int\cf4 \strokec4 	\cf6 \strokec6 main\cf4 \strokec4 (\cf5 \strokec5 int\cf4 \strokec4  argc, \cf5 \strokec5 char\cf4 \strokec4  \cf5 \strokec5 **\cf4 \strokec4 argv)\cb1 \
\pard\pardeftab720\sl380\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3 	\cf8 \strokec8 if\cf4 \strokec4  (argc > \cf7 \strokec7 1\cf4 \strokec4 )\cb1 \
\cb3 	\{\cb1 \
\cb3 		ft_show_tab(ft_strs_to_tab(argc, argv));\cb1 \
\cb3 		\cf8 \strokec8 return\cf4 \strokec4  (\cf7 \strokec7 0\cf4 \strokec4 );\cb1 \
\cb3 	\}\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f1 \cf3 \cb12 \strokec3 Collapse\
\pard\pardeftab720\sl440\partightenfactor0

\fs30 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl440\partightenfactor0
\cf13 \cb14 \
\pard\pardeftab720\sl280\partightenfactor0

\fs24 \cf13 \cb15 \
\pard\pardeftab720\sl280\partightenfactor0
\cf13 \cb1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf13 \cb14 \
\pard\pardeftab720\sl280\partightenfactor0
\cf13 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0

\f2\fs30 \AppleTypeServices\AppleTypeServicesF65539 \cf4 \cb3 \strokec4 \uc0\u8232 \AppleTypeServices\AppleTypeServicesF65539 \cf13 \cb1 \strokec13 \
}